#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=95
USE_PROCD=1

npc_Path="$(which npc)"
tmp_Conf="/tmp/etc/npc.conf"

npc_header() {
	local enabled server_addr server_port protocol vkey compress crypt log_level log_path

	config_get enabled $1 enabled
	config_get server_addr $1 server_addr
	config_get server_port $1 server_port
	config_get protocol $1 protocol
	config_get vkey $1 vkey
	config_get compress $1 compress
	config_get crypt $1 crypt
	config_get log_level $1 log_level
	config_get log_path $1 log_path

	[ -f $tmp_Conf ] && rm $tmp_Conf
	echo "[common]" > $tmp_Conf
	echo "server_addr=${server_addr}:${server_port}" >> $tmp_Conf
	echo "conn_type=${protocol}" >> $tmp_Conf
	echo "vkey=${vkey}" >> $tmp_Conf
	echo "auto_reconnection=true" >> $tmp_Conf

	npc_write_bool compress $1
	npc_write_bool crypt $1

	Log_Level=$log_level
	Log_Path=$log_path
	Enabled=$enabled
}

npc_write_bool() {
	local opt="$1"
	local config="$2"
	local val

	config_get_bool val $config "$opt"
	if [ "$val" -eq 0 ]; then
		echo "${opt}=false" >> $tmp_Conf
	else
		echo "${opt}=true" >> $tmp_Conf
	fi
}

start_service() {
	config_load npc
	config_foreach npc_header npc

	if [ "$Enabled" = 1 ];then
		logger -t NPS 'Starting NPS Client ...'
		procd_open_instance
    		procd_set_param command $npc_Path -config=$tmp_Conf -log_level=$Log_Level -log_path=$Log_Path
    		procd_set_param respawn
    		procd_set_param stdout 1
    		procd_set_param stderr 1
    		procd_close_instance
	fi
}

service_triggers() {
        procd_add_reload_trigger "npc"
}
